------------------------------ 
QUERY PLAN DESCRIPTION: 
------------------------------

EXPLAIN -- $ID$
 -- TPC-H/TPC-R Shipping Priority Query (Q3)
 -- Functional Query Definition
 -- Approved February 1998
 
 
 select  /*+ label(monitoring_tpch_query_3) */ l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'BUILDING' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date '1995-03-22' and l_shipdate > date '1995-03-22' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate LIMIT 10;-- using 1459869488 as a seed to the RNG
 
 


Access Path:
+-SELECT  LIMIT 10 [Cost: 239K, Rows: 10] (PATH ID: 0)
|  Output Only: 10 tuples
|  Execute on: Query Initiator
| +---> SORT [TOPK] [Cost: 239K, Rows: 4M] (PATH ID: 1)
| |      Order: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT))) DESC, orders.O_ORDERDATE ASC
| |      Output Only: 10 tuples
| |      Execute on: All Nodes
| | +---> GROUPBY HASH (GLOBAL RESEGMENT GROUPS) (LOCAL RESEGMENT GROUPS) [Cost: 215K, Rows: 4M] (PATH ID: 2)
| | |      Aggregates: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))
| | |      Group By: lineitem.L_ORDERKEY, orders.O_ORDERDATE, orders.O_SHIPPRIORITY
| | |      Execute on: All Nodes
| | | +---> JOIN HASH [Cost: 151K, Rows: 4M] (PATH ID: 3) Inner (BROADCAST)
| | | |      Join Cond: (lineitem.L_ORDERKEY = orders.O_ORDERKEY)
| | | |      Materialize at Input: orders.O_SHIPPRIORITY, orders.O_ORDERDATE, orders.O_ORDERKEY, orders.O_CUSTKEY
| | | |      Materialize at Output: lineitem.L_EXTENDEDPRICE, lineitem.L_DISCOUNT
| | | |      Execute on: All Nodes
| | | | +-- Outer -> STORAGE ACCESS for lineitem [Cost: 71K, Rows: 33M] (PATH ID: 4)
| | | | |      Projection: DBD.LINEITEM_DBD_8_seg_my1_b0
| | | | |      Materialize: lineitem.L_ORDERKEY
| | | | |      Filter: (lineitem.L_SHIPDATE > '1995-03-22'::date)
| | | | |      Execute on: All Nodes
| | | | |      Runtime Filter: (SIP1(HashJoin): lineitem.L_ORDERKEY)
| | | | +-- Inner -> JOIN HASH [Cost: 9K, Rows: 2M] (PATH ID: 5) Inner (BROADCAST)
| | | | |      Join Cond: (customer.C_CUSTKEY = orders.O_CUSTKEY)
| | | | |      Execute on: All Nodes
| | | | | +-- Outer -> STORAGE ACCESS for orders [Cost: 5K, Rows: 7M] (PATH ID: 6)
| | | | | |      Projection: DBD.ORDERS_DBD_7_seg_my1_b0
| | | | | |      Materialize: orders.O_CUSTKEY
| | | | | |      Filter: (orders.O_ORDERDATE < '1995-03-22'::date)
| | | | | |      Execute on: All Nodes
| | | | | |      Runtime Filter: (SIP2(HashJoin): orders.O_CUSTKEY)
| | | | | +-- Inner -> STORAGE ACCESS for customer [Cost: 239, Rows: 375K] (PATH ID: 7)
| | | | | |      Projection: DBD.CUSTOMER_DBD_6_seg_my1_b0
| | | | | |      Materialize: customer.C_CUSTKEY
| | | | | |      Filter: (customer.C_MKTSEGMENT = 'BUILDING')
| | | | | |      Execute on: All Nodes


------------------------------ 
----------------------------------------------- 
PLAN: BASE QUERY PLAN (GraphViz Format)
----------------------------------------------- 
digraph G {
graph [rankdir=BT, label = "BASE QUERY PLAN\nQuery: EXPLAIN -- $ID$\n -- TPC-H/TPC-R Shipping Priority Query (Q3)\n -- Functional Query Definition\n -- Approved February 1998\n \n \n select  /*+ label(monitoring_tpch_query_3) */ l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = \'BUILDING\' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate \< date \'1995-03-22\' and l_shipdate \> date \'1995-03-22\' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate LIMIT 10;-- using 1459869488 as a seed to the RNG\n \n \n\n\nAll Nodes Vector: \n\n  node[0]=v_verticadb_node0001 (initiator) Up\n  node[1]=v_verticadb_node0002 (executor) Up\n  node[2]=v_verticadb_node0003 (executor) Up\n  node[3]=v_verticadb_node0004 (executor) Up\n", labelloc=t, labeljust=l ordering=out]
0[label = "Root \nOutBlk=[UncTuple(4)]", color = "green", shape = "house"];
1[label = "NewEENode \nOutBlk=[UncTuple(4)]", color = "green", shape = "box"];
2[label = "TopK[PIPELINED]\n Sort: (keys = )\nLIMIT: 10\nOffset: 0\nUnc: Integer(8)\nUnc: Numeric(35,4)\nUnc: Date(8)\nUnc: Integer(8)", color = "green", shape = "box"];
3[label = "ExprEval: \n  lineitem.L_ORDERKEY\n  \<SVAR\>\n  orders.O_ORDERDATE\n  orders.O_SHIPPRIORITY\nUnc: Integer(8)\nUnc: Numeric(35,4)\nUnc: Date(8)\nUnc: Integer(8)", color = "green", shape = "box"];
4[label = "Recv(keys = D,A,N,N)\nRecv from: v_verticadb_node0001,v_verticadb_node0002,v_verticadb_node0003,v_verticadb_node0004\nNet id: 1003\nMerge\n\nUnc: Numeric(35,4)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
5[label = "Send\nSend to: v_verticadb_node0001\nNet id: 1003\nMerge\n\nUnc: Numeric(35,4)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
6[label = "TopK[HEAP]\n Sort: (keys = D,A,N,N)\nLIMIT: 10\nUnc: Numeric(35,4)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
7[label = "ExprEval: \n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\n  orders.O_ORDERDATE\n  lineitem.L_ORDERKEY\n  orders.O_SHIPPRIORITY", color = "green", shape = "box"];
8[label = "ParallelUnionStep: \nCombine\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "green", shape = "box"];
9[label = "GroupByHash(Spill): 3 keys\nAggs:\n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "green", shape = "box"];
10[label = "ParallelUnionStep: \nLocally Resegment\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "green", shape = "box"];
11[label = "Recv\nRecv from: v_verticadb_node0001,v_verticadb_node0002,v_verticadb_node0003,v_verticadb_node0004\nNet id: 1002\n\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "green", shape = "box"];
12[label = "Send\nSend to: v_verticadb_node0001,v_verticadb_node0002,v_verticadb_node0003,v_verticadb_node0004\nNet id: 1002\nResegment\n\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "green", shape = "box"];
13[label = "ParallelUnionStep: \nCombine\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "green", shape = "box"];
14[label = "GroupByHash: 3 keys\nAggs:\n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "green", shape = "box"];
15[label = "StorageUnionStep: LINEITEM_DBD_8_seg_my1_b0\nLocally Resegment\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "purple", shape = "box"];
16[label = "GroupByPipe(HashPrepass): 3 keys\nAggs:\n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "brown", shape = "box"];
17[label = "ExprEval: \n  lineitem.L_ORDERKEY\n  orders.O_ORDERDATE\n  orders.O_SHIPPRIORITY\n  (lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT))\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Numeric(35,4)", color = "brown", shape = "box"];
18[label = "Join: Hash-Join: \n(DBD.LINEITEM x DBD.ORDERS) using LINEITEM_DBD_8_seg_my1_b0 and previous join (PATH ID: 3)\n\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)\nUnc: Numeric(15,2)\nUnc: Numeric(15,2)", color = "brown", shape = "box"];
19[label = "FilterStep: \n(lineitem.L_ORDERKEY IS NOT NULL)\nUnc: Integer(8)", color = "brown", shape = "box"];
20[label = "ScanStep: LINEITEM_DBD_8_seg_my1_b0\n(lineitem.L_SHIPDATE \> \'1995-03-22\'::date)\nSIP1(HashJoin): lineitem.L_ORDERKEY\nL_ORDERKEY\nL_SHIPDATE (not emitted)\nUnc: Integer(8)", color = "brown", shape = "box"];
21[label = "FilterStep: \n(orders.O_ORDERKEY IS NOT NULL)\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
22[label = "Recv\nRecv from: v_verticadb_node0001,v_verticadb_node0002,v_verticadb_node0003,v_verticadb_node0004\nNet id: 1001\n\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
23[label = "Send\nSend to: v_verticadb_node0001,v_verticadb_node0002,v_verticadb_node0003,v_verticadb_node0004\nNet id: 1001\n\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "green", shape = "box"];
24[label = "StorageUnionStep: ORDERS_DBD_7_seg_my1_b0\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "purple", shape = "box"];
25[label = "Join: Hash-Join: \n(DBD.ORDERS x DBD.CUSTOMER) using ORDERS_DBD_7_seg_my1_b0 and CUSTOMER_DBD_6_seg_my1_b0 (PATH ID: 5)\n\nUnc: Integer(8)\nUnc: Date(8)\nUnc: Integer(8)\nUnc: Integer(8)", color = "brown", shape = "box"];
26[label = "FilterStep: \n(orders.O_CUSTKEY IS NOT NULL)\nUnc: Integer(8)", color = "brown", shape = "box"];
27[label = "ScanStep: ORDERS_DBD_7_seg_my1_b0\n(orders.O_ORDERDATE \< \'1995-03-22\'::date)\nSIP2(HashJoin): orders.O_CUSTKEY\nO_ORDERDATE RLE (not emitted)\nO_CUSTKEY\nUnc: Integer(8)", color = "brown", shape = "box"];
28[label = "FilterStep: \n(customer.C_CUSTKEY IS NOT NULL)\nUnc: Integer(8)", color = "green", shape = "box"];
29[label = "Recv\nRecv from: v_verticadb_node0001,v_verticadb_node0002,v_verticadb_node0003,v_verticadb_node0004\nNet id: 1000\n\nUnc: Integer(8)", color = "green", shape = "box"];
30[label = "Send\nSend to: v_verticadb_node0001,v_verticadb_node0002,v_verticadb_node0003,v_verticadb_node0004\nNet id: 1000\n\nUnc: Integer(8)", color = "green", shape = "box"];
31[label = "StorageUnionStep: CUSTOMER_DBD_6_seg_my1_b0\nUnc: Integer(8)", color = "purple", shape = "box"];
32[label = "ScanStep: CUSTOMER_DBD_6_seg_my1_b0\n(customer.C_MKTSEGMENT = \'BUILDING\')\nC_MKTSEGMENT RLE (not emitted)\nC_CUSTKEY\nUnc: Integer(8)", color = "brown", shape = "box"];
1->0 [label = "V[0] C=4",color = "black",style="bold", arrowtail="inv"];
2->1 [label = "0",color = "blue"];
3->2 [label = "0",color = "blue"];
4->3 [label = "0",color = "blue"];
5->4 [label = "0",color = "blue"];
6->5 [label = "0",color = "blue"];
7->6 [label = "0",color = "blue"];
8->7 [label = "0",color = "blue"];
9->8 [label = "0",color = "blue"];
10->9 [label = "0",color = "blue"];
11->10 [label = "0",color = "blue"];
12->11 [label = "0",color = "blue"];
13->12 [label = "0",color = "blue"];
14->13 [label = "0",color = "blue"];
15->14 [label = "0",color = "blue"];
16->15 [label = "0",color = "blue"];
17->16 [label = "0",color = "blue"];
18->17 [label = "0",color = "blue"];
19->18 [label = "0",color = "blue"];
20->19 [label = "0",color = "blue"];
21->18 [label = "1",color = "blue"];
22->21 [label = "0",color = "blue"];
23->22 [label = "0",color = "blue"];
24->23 [label = "0",color = "blue"];
25->24 [label = "0",color = "blue"];
26->25 [label = "0",color = "blue"];
27->26 [label = "0",color = "blue"];
28->25 [label = "1",color = "blue"];
29->28 [label = "0",color = "blue"];
30->29 [label = "0",color = "blue"];
31->30 [label = "0",color = "blue"];
32->31 [label = "0",color = "blue"];
}
