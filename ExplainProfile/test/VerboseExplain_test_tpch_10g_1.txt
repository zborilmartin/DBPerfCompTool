------------------------------ 
QUERY PLAN DESCRIPTION: 
------------------------------

Opt Vertica Options
--------------------
PLAN_OUTPUT_SUPER_VERBOSE


EXPLAIN VERBOSE -- $ID$
 -- TPC-H/TPC-R Pricing Summary Report Query (Q1)
 -- Functional Query Definition
 -- Approved February 1998
 
 select  /*+ label(monitoring_tpch_query_1) */ l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from tpch_10g.lineitem where l_shipdate <= date '1998-12-01' - interval '106' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus LIMIT 1; -- using 1459869488 as a seed to the RNG
 


Access Path:
+-SELECT  LIMIT 1 [Cost: 811261.000000, Rows: 1.000000 Disk(B): 0.000000 CPU(B): 0.000000 Memory(B): 0.000000 Netwrk(B): 0.000000 Parallelism: 1.000000] [OutRowSz (B): 106] (PATH ID: 0)
|  Output Only: 1 tuples
|  Sort Key: (LINEITEM.L_RETURNFLAG, LINEITEM.L_LINESTATUS)
|  LDISTRIB_UNSEGMENTED
| +---> GROUPBY HASH (SORT OUTPUT) (LOCAL RESEGMENT GROUPS) [Cost: 811261.000000, Rows: 3.000000 Disk(B): 0.000000 CPU(B): 2939316550.000000 Memory(B): 828.000000 Netwrk(B): 0.000000 Parallelism: 1.000000] [OutRowSz (B): 130] (PATH ID: 2)
| |      Aggregates: sum(lineitem.L_QUANTITY), sum(lineitem.L_EXTENDEDPRICE), sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT))), sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX))), sum_float(lineitem.L_QUANTITY), count(lineitem.L_QUANTITY), sum_float(lineitem.L_EXTENDEDPRICE), count(lineitem.L_EXTENDEDPRICE), sum_float(lineitem.L_DISCOUNT), count(lineitem.L_DISCOUNT), count(*)
| |      Group By: lineitem.L_RETURNFLAG, lineitem.L_LINESTATUS
| |      Sort Key: (LINEITEM.L_RETURNFLAG, LINEITEM.L_LINESTATUS)
| |      LDISTRIB_SEGMENTED
| | +---> STORAGE ACCESS for lineitem [Cost: 739500.000000, Rows: 58786331.000000 Disk(B): 0.000000 CPU(B): 0.000000 Memory(B): 0.000000 Netwrk(B): 0.000000 Parallelism: 1.000000] [OutRowSz (B): 50] (PATH ID: 3)
| | |      Column Cost Aspects: [ Disk(B): 2478964736.000000 CPU(B): 480378880.000000 Memory(B): 2509816415.680000 Netwrk(B): 0.000000 Parallelism: 1.000000 ]
| | |      Projection: tpch_10g.LINEITEM_super
| | |      Materialize: lineitem.L_QUANTITY, lineitem.L_EXTENDEDPRICE, lineitem.L_DISCOUNT, lineitem.L_TAX, lineitem.L_RETURNFLAG, lineitem.L_LINESTATUS
| | |      Filter: (lineitem.L_SHIPDATE <= '1998-08-17 00:00:00'::timestamp)/* sel=0.980000 ndv= 2513 */
| | |      Sort Key: (LINEITEM.L_ORDERKEY, LINEITEM.L_LINENUMBER)
| | |      LDISTRIB_SEGMENTED


------------------------------ 
----------------------------------------------- 
Plan Extras
----------------------------------------------- 


digraph G {
graph [rankdir=BT, label = "JoinGraph(Base)\nGuaranteed Uniqueness: \n(lineitem.L_RETURNFLAG,lineitem.L_LINESTATUS)", labelloc=t, labeljust=l ]
node140323318059360_0[label = "node 0 lineitem (tpch_10g.LINEITEM)\noid 45035996330892182 varno = 1\npreds: \n(lineitem.L_SHIPDATE \<= \'1998-08-17 00:00:00\'::timestamp)", color = "black"];
}

Table Name -> JoinGraph Node Mappings: 
tpch_10g.LINEITEM: Node 0(JoinGraph ID: 1)

Join Descriptions: 


Projections chosen for tables: 
   tpch_10g.LINEITEM: LINEITEM_super

Simplified Join Order:
-----------------------


digraph G {
graph [label = "Simplified Join Order: \n(1,0) [lineitem] --> LINEITEM_super for tpch_10g.LINEITEM\n", labelloc=t, labeljust=l ] 
0[shape = "record" label = "SELECT"];
0->1 [label = "" color = "black" ];
1[shape = "record" label = "SORT"];
1->2 [label = "" color = "black" ];
2[shape = "record" label = "GROUPBY"];
2->3 [label = "" color = "black" ];
3[shape = "record" label = "P(1,0)"];
}



----------------------------------------------- 
PLAN: BASE QUERY PLAN (GraphViz Format)
----------------------------------------------- 
digraph G {
graph [rankdir=BT, label = "BASE QUERY PLAN\nQuery: EXPLAIN VERBOSE -- $ID$\n -- TPC-H/TPC-R Pricing Summary Report Query (Q1)\n -- Functional Query Definition\n -- Approved February 1998\n \n select  /*+ label(monitoring_tpch_query_1) */ l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from tpch_10g.lineitem where l_shipdate \<= date \'1998-12-01\' - interval \'106\' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus LIMIT 1; -- using 1459869488 as a seed to the RNG\n \n\n\nAll Nodes Vector: \n\n  node[0]=v_verticadb_node0001 (initiator) Up\n", labelloc=t, labeljust=l ordering=out]
0[label = "Root \nNode Set: [Name: v_verticadb_node0001 , index: 0 , (initiator))]\nNode ID: 0", color = "green", shape = "house"];
1[label = "NewEENode \nOutBlk=[UncTuple<char(1).1, char(1).1, numeric(15,2), numeric(15,2), numeric(35,4).16, numeric(55,6).24, float, float, float, int>]\nNode Set: [Name: v_verticadb_node0001 , index: 0 , (initiator))]\nNode ID: 0", color = "green", shape = "box"];
2[label = "TopK[PIPELINED]\n Sort: (keys = )\nLIMIT: 1\nOffset: 0\nnodeSet: [0] \n[Local Segmented Properties: UNSEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: \<SVAR\>[100,-3] - Numeric(15,2)\nUnc: \<SVAR\>[101,-3] - Numeric(15,2)\nUnc: \<SVAR\>[102,-3] - Numeric(35,4)\nUnc: \<SVAR\>[103,-3] - Numeric(55,6)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[111,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[112,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[113,-3] - Float(8)\nUnc: \<SVAR\>[110,-3] - Integer(8)", color = "green", shape = "box"];
3[label = "ExprEval: \n  lineitem.L_RETURNFLAG\n  lineitem.L_LINESTATUS\n  \<SVAR\>\n  \<SVAR\>\n  \<SVAR\>\n  \<SVAR\>\n  (\<SVAR\> / float8(\<SVAR\>))\n  (\<SVAR\> / float8(\<SVAR\>))\n  (\<SVAR\> / float8(\<SVAR\>))\n  \<SVAR\>\nnodeSet: [0] \n[Local Segmented Properties: UNSEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: \<SVAR\>[100,-3] - Numeric(15,2)\nUnc: \<SVAR\>[101,-3] - Numeric(15,2)\nUnc: \<SVAR\>[102,-3] - Numeric(35,4)\nUnc: \<SVAR\>[103,-3] - Numeric(55,6)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[111,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[112,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[113,-3] - Float(8)\nUnc: \<SVAR\>[110,-3] - Integer(8)", color = "green", shape = "box"];
4[label = "ParallelMergeStep: 2 sorted\n Sort: (keys = A,A)\nthreads 3\nCombine\nnodeSet: [0] \n[Local Segmented Properties: UNSEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "green", shape = "box"];
5[label = "GroupByHash(Sort Groups)(Spill): 2 keys\nAggs:\n  sum(lineitem.L_QUANTITY)\n  sum(lineitem.L_EXTENDEDPRICE)\n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\n  sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))\n  sum_float(lineitem.L_QUANTITY)\n  count(lineitem.L_QUANTITY)\n  sum_float(lineitem.L_EXTENDEDPRICE)\n  count(lineitem.L_EXTENDEDPRICE)\n  sum_float(lineitem.L_DISCOUNT)\n  count(lineitem.L_DISCOUNT)\n  count(*)\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "green", shape = "box"];
6[label = "StorageUnionStep: LINEITEM_super\nstartEpoch 0\nendEpoch 2756569\nthreads 3\nLocally Resegment By: ((((100 \<*\> 69069) \<+\> internal_strhash(lineitem.L_RETURNFLAG)) \<*\> 69069) \<+\> internal_strhash(lineitem.L_LINESTATUS))\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "purple", shape = "box"];
7[label = "GroupByPipe(HashPrepass): 2 keys\nAggs:\n  sum(lineitem.L_QUANTITY)\n  sum(lineitem.L_EXTENDEDPRICE)\n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\n  sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))\n  sum_float(lineitem.L_QUANTITY)\n  count(lineitem.L_QUANTITY)\n  sum_float(lineitem.L_EXTENDEDPRICE)\n  count(lineitem.L_EXTENDEDPRICE)\n  sum_float(lineitem.L_DISCOUNT)\n  count(lineitem.L_DISCOUNT)\n  count(*)\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "brown", shape = "box"];
8[label = "ExprEval: \n  lineitem.L_RETURNFLAG\n  lineitem.L_LINESTATUS\n  lineitem.L_QUANTITY\n  lineitem.L_EXTENDEDPRICE\n  (lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT))\n  ((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX))\n  lineitem.L_QUANTITY\n  lineitem.L_QUANTITY\n  lineitem.L_EXTENDEDPRICE\n  lineitem.L_EXTENDEDPRICE\n  lineitem.L_DISCOUNT\n  lineitem.L_DISCOUNT\n  1\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Numeric(15,2)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Numeric(15,2)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Numeric(15,2)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Numeric(15,2)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Numeric(15,2)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Numeric(15,2)\nUnc: count(*)[110,-3] - Integer(8)", color = "brown", shape = "box"];
9[label = "ScanStep: LINEITEM_super\n(lineitem.L_SHIPDATE \<= \'1998-08-17 00:00:00\'::timestamp)\nstartEpoch 0\nendEpoch 2756569\nL_QUANTITY\nL_EXTENDEDPRICE\nL_DISCOUNT\nL_TAX\nL_RETURNFLAG\nL_LINESTATUS\nL_SHIPDATE (not emitted)\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: L_QUANTITY[1,5] - Numeric(15,2)\nUnc: L_EXTENDEDPRICE[1,6] - Numeric(15,2)\nUnc: L_DISCOUNT[1,7] - Numeric(15,2)\nUnc: L_TAX[1,8] - Numeric(15,2)\nUnc: L_RETURNFLAG[1,9] - Char(1)\nUnc: L_LINESTATUS[1,10] - Char(1)", color = "brown", shape = "box"];
1->0 [label = "V[0] S=0, D=0",color = "black"];
1->0 [label = "V[0] S=1, D=1",color = "black"];
1->0 [label = "V[0] S=2, D=2",color = "black"];
1->0 [label = "V[0] S=3, D=3",color = "black"];
1->0 [label = "V[0] S=4, D=4",color = "black"];
1->0 [label = "V[0] S=5, D=5",color = "black"];
1->0 [label = "V[0] S=6, D=6",color = "black"];
1->0 [label = "V[0] S=7, D=7",color = "black"];
1->0 [label = "V[0] S=8, D=8",color = "black"];
1->0 [label = "V[0] S=9, D=9",color = "black"];
2->1 [label = "0",color = "blue"];
3->2 [label = "0",color = "blue"];
4->3 [label = "0",color = "blue"];
5->4 [label = "0",color = "blue"];
6->5 [label = "0",color = "blue"];
7->6 [label = "0",color = "blue"];
8->7 [label = "0",color = "blue"];
9->8 [label = "0",color = "blue"];
}
Estimated resources for plan:
-----------------------------
Scratch Memory MB: 3373
File Handles:      45
Worker Threads:    34
Blocking Threads:  0
Externalizing Ops: 3
Unbounded Mem Ops: 0
Max Threads:     3

Extra Memory Reservation MB 0
-----------------------------
----------------------------------------------- 
PLAN:  ANNOTATED BY DISTRIBUTOR  (GraphViz Format)
----------------------------------------------- 
digraph G {
graph [rankdir=BT, label = " ANNOTATED BY DISTRIBUTOR \n", labelloc=t, labeljust=l ordering=out]
0[label = "Root \nOutBlk=[UncTuple<char(1).1, char(1).1, numeric(15,2), numeric(15,2), numeric(35,4).16, numeric(55,6).24, float, float, float, int>]\nNode Set: [Name: v_verticadb_node0001 , index: 0 , (initiator))]\nNode ID: 0", color = "green", shape = "house"];
1[label = "NewEENode \nOutBlk=[UncTuple<char(1).1, char(1).1, numeric(15,2), numeric(15,2), numeric(35,4).16, numeric(55,6).24, float, float, float, int>]\nNode Set: [Name: v_verticadb_node0001 , index: 0 , (initiator))]\nNode ID: 0", color = "green", shape = "box"];
2[label = "TopK[PIPELINED]\n Sort: (keys = )\nLIMIT: 1\nOffset: 0\nnodeSet: [0] \n[Local Segmented Properties: UNSEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: \<SVAR\>[100,-3] - Numeric(15,2)\nUnc: \<SVAR\>[101,-3] - Numeric(15,2)\nUnc: \<SVAR\>[102,-3] - Numeric(35,4)\nUnc: \<SVAR\>[103,-3] - Numeric(55,6)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[111,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[112,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[113,-3] - Float(8)\nUnc: \<SVAR\>[110,-3] - Integer(8)", color = "green", shape = "box"];
3[label = "ExprEval: \n  lineitem.L_RETURNFLAG\n  lineitem.L_LINESTATUS\n  \<SVAR\>\n  \<SVAR\>\n  \<SVAR\>\n  \<SVAR\>\n  (\<SVAR\> / float8(\<SVAR\>))\n  (\<SVAR\> / float8(\<SVAR\>))\n  (\<SVAR\> / float8(\<SVAR\>))\n  \<SVAR\>\nnodeSet: [0] \n[Local Segmented Properties: UNSEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: \<SVAR\>[100,-3] - Numeric(15,2)\nUnc: \<SVAR\>[101,-3] - Numeric(15,2)\nUnc: \<SVAR\>[102,-3] - Numeric(35,4)\nUnc: \<SVAR\>[103,-3] - Numeric(55,6)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[111,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[112,-3] - Float(8)\nUnc: (\<SVAR\> / float8(\<SVAR\>))[113,-3] - Float(8)\nUnc: \<SVAR\>[110,-3] - Integer(8)", color = "green", shape = "box"];
4[label = "ParallelMergeStep: 2 sorted\n Sort: (keys = A,A)\nthreads 3\nCombine\nnodeSet: [0] \n[Local Segmented Properties: UNSEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "green", shape = "box"];
5[label = "GroupByHash(Sort Groups)(Spill): 2 keys\nAggs:\n  sum(lineitem.L_QUANTITY)\n  sum(lineitem.L_EXTENDEDPRICE)\n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\n  sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))\n  sum_float(lineitem.L_QUANTITY)\n  count(lineitem.L_QUANTITY)\n  sum_float(lineitem.L_EXTENDEDPRICE)\n  count(lineitem.L_EXTENDEDPRICE)\n  sum_float(lineitem.L_DISCOUNT)\n  count(lineitem.L_DISCOUNT)\n  count(*)\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "green", shape = "box"];
6[label = "StorageUnionStep: LINEITEM_super\nstartEpoch 0\nendEpoch 2756569\nthreads 3\nLocally Resegment By: ((((100 \<*\> 69069) \<+\> internal_strhash(lineitem.L_RETURNFLAG)) \<*\> 69069) \<+\> internal_strhash(lineitem.L_LINESTATUS))\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "purple", shape = "box"];
7[label = "GroupByPipe(HashPrepass): 2 keys\nAggs:\n  sum(lineitem.L_QUANTITY)\n  sum(lineitem.L_EXTENDEDPRICE)\n  sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))\n  sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))\n  sum_float(lineitem.L_QUANTITY)\n  count(lineitem.L_QUANTITY)\n  sum_float(lineitem.L_EXTENDEDPRICE)\n  count(lineitem.L_EXTENDEDPRICE)\n  sum_float(lineitem.L_DISCOUNT)\n  count(lineitem.L_DISCOUNT)\n  count(*)\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Float(8)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Integer(8)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Float(8)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Integer(8)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Float(8)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Integer(8)\nUnc: count(*)[110,-3] - Integer(8)", color = "brown", shape = "box"];
8[label = "ExprEval: \n  lineitem.L_RETURNFLAG\n  lineitem.L_LINESTATUS\n  lineitem.L_QUANTITY\n  lineitem.L_EXTENDEDPRICE\n  (lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT))\n  ((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX))\n  lineitem.L_QUANTITY\n  lineitem.L_QUANTITY\n  lineitem.L_EXTENDEDPRICE\n  lineitem.L_EXTENDEDPRICE\n  lineitem.L_DISCOUNT\n  lineitem.L_DISCOUNT\n  1\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: lineitem.L_RETURNFLAG[1,9] - Char(1)\nUnc: lineitem.L_LINESTATUS[1,10] - Char(1)\nUnc: sum(lineitem.L_QUANTITY)[100,-3] - Numeric(15,2)\nUnc: sum(lineitem.L_EXTENDEDPRICE)[101,-3] - Numeric(15,2)\nUnc: sum((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)))[102,-3] - Numeric(35,4)\nUnc: sum(((lineitem.L_EXTENDEDPRICE * (1 - lineitem.L_DISCOUNT)) * (1 + lineitem.L_TAX)))[103,-3] - Numeric(55,6)\nUnc: sum_float(lineitem.L_QUANTITY)[104,-3] - Numeric(15,2)\nUnc: count(lineitem.L_QUANTITY)[105,-3] - Numeric(15,2)\nUnc: sum_float(lineitem.L_EXTENDEDPRICE)[106,-3] - Numeric(15,2)\nUnc: count(lineitem.L_EXTENDEDPRICE)[107,-3] - Numeric(15,2)\nUnc: sum_float(lineitem.L_DISCOUNT)[108,-3] - Numeric(15,2)\nUnc: count(lineitem.L_DISCOUNT)[109,-3] - Numeric(15,2)\nUnc: count(*)[110,-3] - Integer(8)", color = "brown", shape = "box"];
9[label = "ScanStep: LINEITEM_super\n(lineitem.L_SHIPDATE \<= \'1998-08-17 00:00:00\'::timestamp)\nstartEpoch 0\nendEpoch 2756569\nL_QUANTITY\nL_EXTENDEDPRICE\nL_DISCOUNT\nL_TAX\nL_RETURNFLAG\nL_LINESTATUS\nL_SHIPDATE (not emitted)\nnodeSet: [0] \n[Local Segmented Properties: SEGMENTED]\nUnc: L_QUANTITY[1,5] - Numeric(15,2)\nUnc: L_EXTENDEDPRICE[1,6] - Numeric(15,2)\nUnc: L_DISCOUNT[1,7] - Numeric(15,2)\nUnc: L_TAX[1,8] - Numeric(15,2)\nUnc: L_RETURNFLAG[1,9] - Char(1)\nUnc: L_LINESTATUS[1,10] - Char(1)", color = "brown", shape = "box"];
1->0 [label = "V[0] S=0, D=0",color = "black"];
1->0 [label = "V[0] S=1, D=1",color = "black"];
1->0 [label = "V[0] S=2, D=2",color = "black"];
1->0 [label = "V[0] S=3, D=3",color = "black"];
1->0 [label = "V[0] S=4, D=4",color = "black"];
1->0 [label = "V[0] S=5, D=5",color = "black"];
1->0 [label = "V[0] S=6, D=6",color = "black"];
1->0 [label = "V[0] S=7, D=7",color = "black"];
1->0 [label = "V[0] S=8, D=8",color = "black"];
1->0 [label = "V[0] S=9, D=9",color = "black"];
2->1 [label = "0",color = "blue"];
3->2 [label = "0",color = "blue"];
4->3 [label = "0",color = "blue"];
5->4 [label = "0",color = "blue"];
6->5 [label = "0",color = "blue"];
7->6 [label = "0",color = "blue"];
8->7 [label = "0",color = "blue"];
9->8 [label = "0",color = "blue"];
}
Estimated resources for plan:
-----------------------------
Scratch Memory MB: 3373
File Handles:      45
Worker Threads:    34
Blocking Threads:  0
Externalizing Ops: 3
Unbounded Mem Ops: 0
Max Threads:     3

Extra Memory Reservation MB 0
-----------------------------
